{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Varun Acharya\\\\CascadeProjects\\\\url-health-monitor\\\\frontend\\\\src\\\\components\\\\UrlInputForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport UrlStatusTable from './UrlStatusTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UrlInputForm = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [status, setStatus] = useState('');\n  const [results, setResults] = useState([]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const urls = input.split(/[\\n,]+/).map(url => url.trim()).filter(url => url.length > 0);\n\n    // Validate each URL\n    const invalidUrls = urls.filter(url => {\n      try {\n        new URL(url);\n        return false;\n      } catch (e) {\n        return true;\n      }\n    });\n    if (invalidUrls.length > 0) {\n      setStatus(`Invalid URL(s): ${invalidUrls.join(', ')}`);\n      return;\n    }\n    if (urls.length === 0) {\n      setStatus('Please enter at least one URL.');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/check-urls', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          urls\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setResults(data); // Expecting array of {url, status, responseTime, checkedAt}\n        setStatus('URLs checked!');\n        setInput('');\n      } else {\n        setStatus('Failed to submit URLs.');\n        setResults([]);\n      }\n    } catch (err) {\n      setStatus('Error connecting to backend.');\n      setResults([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"urls\",\n        children: \"Enter URLs (comma-separated or one per line):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"urls\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        rows: 6,\n        cols: 50,\n        placeholder: \"https://example.com, https://another.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 10,\n          color: 'green'\n        },\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UrlStatusTable, {\n      results: results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(UrlInputForm, \"j5I6YQ1HWf9pUH+em5j19n4RGOo=\");\n_c = UrlInputForm;\nexport default UrlInputForm;\nvar _c;\n$RefreshReg$(_c, \"UrlInputForm\");","map":{"version":3,"names":["React","useState","UrlStatusTable","jsxDEV","_jsxDEV","UrlInputForm","_s","input","setInput","status","setStatus","results","setResults","handleSubmit","e","preventDefault","urls","split","map","url","trim","filter","length","invalidUrls","URL","join","response","fetch","method","headers","body","JSON","stringify","ok","data","json","err","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onChange","target","rows","cols","placeholder","type","style","marginTop","color","_c","$RefreshReg$"],"sources":["C:/Users/Varun Acharya/CascadeProjects/url-health-monitor/frontend/src/components/UrlInputForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport UrlStatusTable from './UrlStatusTable';\n\nconst UrlInputForm = () => {\n  const [input, setInput] = useState('');\n  const [status, setStatus] = useState('');\n  const [results, setResults] = useState([]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const urls = input\n      .split(/[\\n,]+/)\n      .map(url => url.trim())\n      .filter(url => url.length > 0);\n\n    // Validate each URL\n    const invalidUrls = urls.filter(url => {\n      try {\n        new URL(url);\n        return false;\n      } catch (e) {\n        return true;\n      }\n    });\n    if (invalidUrls.length > 0) {\n      setStatus(`Invalid URL(s): ${invalidUrls.join(', ')}`);\n      return;\n    }\n\n    if (urls.length === 0) {\n      setStatus('Please enter at least one URL.');\n      return;\n    }\n\n    try {\n      const response = await fetch('http://localhost:5000/check-urls', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ urls }),\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setResults(data); // Expecting array of {url, status, responseTime, checkedAt}\n        setStatus('URLs checked!');\n        setInput('');\n      } else {\n        setStatus('Failed to submit URLs.');\n        setResults([]);\n      }\n    } catch (err) {\n      setStatus('Error connecting to backend.');\n      setResults([]);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"urls\">\n          Enter URLs (comma-separated or one per line):\n        </label>\n        <br />\n        <textarea\n          id=\"urls\"\n          value={input}\n          onChange={e => setInput(e.target.value)}\n          rows={6}\n          cols={50}\n          placeholder=\"https://example.com, https://another.com\"\n        />\n        <br />\n        <button type=\"submit\">Submit</button>\n        <div style={{ marginTop: 10, color: 'green' }}>{status}</div>\n      </form>\n      <UrlStatusTable results={results} />\n    </div>\n  );\n};\n\nexport default UrlInputForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}